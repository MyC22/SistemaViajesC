<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fZnGGWNTAAAAAElFTkSuQmCC
</value>
  </data>
</root>